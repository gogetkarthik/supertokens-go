// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gogetkarthik/service-specification/supertokens/models"
)

// CreateSessionReader is a Reader for the CreateSession structure.
type CreateSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateSessionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSessionOK creates a CreateSessionOK with default headers values
func NewCreateSessionOK() *CreateSessionOK {
	return &CreateSessionOK{}
}

/*CreateSessionOK handles this case with default header values.

Session details
*/
type CreateSessionOK struct {
	Payload *models.SessionOutput
}

func (o *CreateSessionOK) Error() string {
	return fmt.Sprintf("[POST /session][%d] createSessionOK  %+v", 200, o.Payload)
}

func (o *CreateSessionOK) GetPayload() *models.SessionOutput {
	return o.Payload
}

func (o *CreateSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionBadRequest creates a CreateSessionBadRequest with default headers values
func NewCreateSessionBadRequest() *CreateSessionBadRequest {
	return &CreateSessionBadRequest{}
}

/*CreateSessionBadRequest handles this case with default header values.

Invalid input
*/
type CreateSessionBadRequest struct {
	Payload models.Error
}

func (o *CreateSessionBadRequest) Error() string {
	return fmt.Sprintf("[POST /session][%d] createSessionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSessionBadRequest) GetPayload() models.Error {
	return o.Payload
}

func (o *CreateSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionNotFound creates a CreateSessionNotFound with default headers values
func NewCreateSessionNotFound() *CreateSessionNotFound {
	return &CreateSessionNotFound{}
}

/*CreateSessionNotFound handles this case with default header values.

The specified resource was not found
*/
type CreateSessionNotFound struct {
	Payload models.Error
}

func (o *CreateSessionNotFound) Error() string {
	return fmt.Sprintf("[POST /session][%d] createSessionNotFound  %+v", 404, o.Payload)
}

func (o *CreateSessionNotFound) GetPayload() models.Error {
	return o.Payload
}

func (o *CreateSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionMethodNotAllowed creates a CreateSessionMethodNotAllowed with default headers values
func NewCreateSessionMethodNotAllowed() *CreateSessionMethodNotAllowed {
	return &CreateSessionMethodNotAllowed{}
}

/*CreateSessionMethodNotAllowed handles this case with default header values.

Method not souported
*/
type CreateSessionMethodNotAllowed struct {
	Payload models.Error
}

func (o *CreateSessionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /session][%d] createSessionMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateSessionMethodNotAllowed) GetPayload() models.Error {
	return o.Payload
}

func (o *CreateSessionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionInternalServerError creates a CreateSessionInternalServerError with default headers values
func NewCreateSessionInternalServerError() *CreateSessionInternalServerError {
	return &CreateSessionInternalServerError{}
}

/*CreateSessionInternalServerError handles this case with default header values.

Internal server error
*/
type CreateSessionInternalServerError struct {
	Payload models.Error
}

func (o *CreateSessionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /session][%d] createSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSessionInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *CreateSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
