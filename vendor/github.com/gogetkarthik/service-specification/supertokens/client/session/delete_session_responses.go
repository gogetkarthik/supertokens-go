// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gogetkarthik/service-specification/supertokens/models"
)

// DeleteSessionReader is a Reader for the DeleteSession structure.
type DeleteSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteSessionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSessionOK creates a DeleteSessionOK with default headers values
func NewDeleteSessionOK() *DeleteSessionOK {
	return &DeleteSessionOK{}
}

/*DeleteSessionOK handles this case with default header values.

Delete session destails
*/
type DeleteSessionOK struct {
	Payload *models.SessionDeleteOutput
}

func (o *DeleteSessionOK) Error() string {
	return fmt.Sprintf("[DELETE /session][%d] deleteSessionOK  %+v", 200, o.Payload)
}

func (o *DeleteSessionOK) GetPayload() *models.SessionDeleteOutput {
	return o.Payload
}

func (o *DeleteSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionDeleteOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSessionBadRequest creates a DeleteSessionBadRequest with default headers values
func NewDeleteSessionBadRequest() *DeleteSessionBadRequest {
	return &DeleteSessionBadRequest{}
}

/*DeleteSessionBadRequest handles this case with default header values.

Invalid input
*/
type DeleteSessionBadRequest struct {
	Payload models.Error
}

func (o *DeleteSessionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /session][%d] deleteSessionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSessionBadRequest) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSessionNotFound creates a DeleteSessionNotFound with default headers values
func NewDeleteSessionNotFound() *DeleteSessionNotFound {
	return &DeleteSessionNotFound{}
}

/*DeleteSessionNotFound handles this case with default header values.

The specified resource was not found
*/
type DeleteSessionNotFound struct {
	Payload models.Error
}

func (o *DeleteSessionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /session][%d] deleteSessionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSessionNotFound) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSessionMethodNotAllowed creates a DeleteSessionMethodNotAllowed with default headers values
func NewDeleteSessionMethodNotAllowed() *DeleteSessionMethodNotAllowed {
	return &DeleteSessionMethodNotAllowed{}
}

/*DeleteSessionMethodNotAllowed handles this case with default header values.

Method not souported
*/
type DeleteSessionMethodNotAllowed struct {
	Payload models.Error
}

func (o *DeleteSessionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /session][%d] deleteSessionMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeleteSessionMethodNotAllowed) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteSessionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSessionInternalServerError creates a DeleteSessionInternalServerError with default headers values
func NewDeleteSessionInternalServerError() *DeleteSessionInternalServerError {
	return &DeleteSessionInternalServerError{}
}

/*DeleteSessionInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteSessionInternalServerError struct {
	Payload models.Error
}

func (o *DeleteSessionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /session][%d] deleteSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSessionInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *DeleteSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
