// Code generated by go-swagger; DO NOT EDIT.

package dev_or_prod_mode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gogetkarthik/service-specification/supertokens/models"
)

// DevProductionModeReader is a Reader for the DevProductionMode structure.
type DevProductionModeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DevProductionModeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDevProductionModeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDevProductionModeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDevProductionModeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDevProductionModeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDevProductionModeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDevProductionModeOK creates a DevProductionModeOK with default headers values
func NewDevProductionModeOK() *DevProductionModeOK {
	return &DevProductionModeOK{}
}

/*DevProductionModeOK handles this case with default header values.

Dev or Prod mode destails
*/
type DevProductionModeOK struct {
	Payload *models.DevProductionModeOutput
}

func (o *DevProductionModeOK) Error() string {
	return fmt.Sprintf("[GET /devproductionmode][%d] devProductionModeOK  %+v", 200, o.Payload)
}

func (o *DevProductionModeOK) GetPayload() *models.DevProductionModeOutput {
	return o.Payload
}

func (o *DevProductionModeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DevProductionModeOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDevProductionModeBadRequest creates a DevProductionModeBadRequest with default headers values
func NewDevProductionModeBadRequest() *DevProductionModeBadRequest {
	return &DevProductionModeBadRequest{}
}

/*DevProductionModeBadRequest handles this case with default header values.

Invalid input
*/
type DevProductionModeBadRequest struct {
	Payload models.Error
}

func (o *DevProductionModeBadRequest) Error() string {
	return fmt.Sprintf("[GET /devproductionmode][%d] devProductionModeBadRequest  %+v", 400, o.Payload)
}

func (o *DevProductionModeBadRequest) GetPayload() models.Error {
	return o.Payload
}

func (o *DevProductionModeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDevProductionModeNotFound creates a DevProductionModeNotFound with default headers values
func NewDevProductionModeNotFound() *DevProductionModeNotFound {
	return &DevProductionModeNotFound{}
}

/*DevProductionModeNotFound handles this case with default header values.

The specified resource was not found
*/
type DevProductionModeNotFound struct {
	Payload models.Error
}

func (o *DevProductionModeNotFound) Error() string {
	return fmt.Sprintf("[GET /devproductionmode][%d] devProductionModeNotFound  %+v", 404, o.Payload)
}

func (o *DevProductionModeNotFound) GetPayload() models.Error {
	return o.Payload
}

func (o *DevProductionModeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDevProductionModeMethodNotAllowed creates a DevProductionModeMethodNotAllowed with default headers values
func NewDevProductionModeMethodNotAllowed() *DevProductionModeMethodNotAllowed {
	return &DevProductionModeMethodNotAllowed{}
}

/*DevProductionModeMethodNotAllowed handles this case with default header values.

Method not souported
*/
type DevProductionModeMethodNotAllowed struct {
	Payload models.Error
}

func (o *DevProductionModeMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /devproductionmode][%d] devProductionModeMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DevProductionModeMethodNotAllowed) GetPayload() models.Error {
	return o.Payload
}

func (o *DevProductionModeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDevProductionModeInternalServerError creates a DevProductionModeInternalServerError with default headers values
func NewDevProductionModeInternalServerError() *DevProductionModeInternalServerError {
	return &DevProductionModeInternalServerError{}
}

/*DevProductionModeInternalServerError handles this case with default header values.

Internal server error
*/
type DevProductionModeInternalServerError struct {
	Payload models.Error
}

func (o *DevProductionModeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devproductionmode][%d] devProductionModeInternalServerError  %+v", 500, o.Payload)
}

func (o *DevProductionModeInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *DevProductionModeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
