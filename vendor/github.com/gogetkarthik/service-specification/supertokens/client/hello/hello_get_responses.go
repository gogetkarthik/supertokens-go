// Code generated by go-swagger; DO NOT EDIT.

package hello

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/gogetkarthik/service-specification/supertokens/models"
)

// HelloGetReader is a Reader for the HelloGet structure.
type HelloGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelloGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelloGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHelloGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelloGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewHelloGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHelloGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHelloGetOK creates a HelloGetOK with default headers values
func NewHelloGetOK() *HelloGetOK {
	return &HelloGetOK{}
}

/*HelloGetOK handles this case with default header values.

Hello
*/
type HelloGetOK struct {
	Payload models.HelloOutput
}

func (o *HelloGetOK) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloGetOK  %+v", 200, o.Payload)
}

func (o *HelloGetOK) GetPayload() models.HelloOutput {
	return o.Payload
}

func (o *HelloGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloGetBadRequest creates a HelloGetBadRequest with default headers values
func NewHelloGetBadRequest() *HelloGetBadRequest {
	return &HelloGetBadRequest{}
}

/*HelloGetBadRequest handles this case with default header values.

Invalid input
*/
type HelloGetBadRequest struct {
	Payload models.Error
}

func (o *HelloGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloGetBadRequest  %+v", 400, o.Payload)
}

func (o *HelloGetBadRequest) GetPayload() models.Error {
	return o.Payload
}

func (o *HelloGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloGetNotFound creates a HelloGetNotFound with default headers values
func NewHelloGetNotFound() *HelloGetNotFound {
	return &HelloGetNotFound{}
}

/*HelloGetNotFound handles this case with default header values.

The specified resource was not found
*/
type HelloGetNotFound struct {
	Payload models.Error
}

func (o *HelloGetNotFound) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloGetNotFound  %+v", 404, o.Payload)
}

func (o *HelloGetNotFound) GetPayload() models.Error {
	return o.Payload
}

func (o *HelloGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloGetMethodNotAllowed creates a HelloGetMethodNotAllowed with default headers values
func NewHelloGetMethodNotAllowed() *HelloGetMethodNotAllowed {
	return &HelloGetMethodNotAllowed{}
}

/*HelloGetMethodNotAllowed handles this case with default header values.

Method not souported
*/
type HelloGetMethodNotAllowed struct {
	Payload models.Error
}

func (o *HelloGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *HelloGetMethodNotAllowed) GetPayload() models.Error {
	return o.Payload
}

func (o *HelloGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloGetInternalServerError creates a HelloGetInternalServerError with default headers values
func NewHelloGetInternalServerError() *HelloGetInternalServerError {
	return &HelloGetInternalServerError{}
}

/*HelloGetInternalServerError handles this case with default header values.

Internal server error
*/
type HelloGetInternalServerError struct {
	Payload models.Error
}

func (o *HelloGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /hello][%d] helloGetInternalServerError  %+v", 500, o.Payload)
}

func (o *HelloGetInternalServerError) GetPayload() models.Error {
	return o.Payload
}

func (o *HelloGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
